'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FederatedButtons = undefined;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _core = require('@aws-amplify/core');

var _auth = require('@aws-amplify/auth');

var _auth2 = _interopRequireDefault(_auth);

var _AmplifyUITheme = require('../Amplify-UI/Amplify-UI-Theme');

var _AmplifyUITheme2 = _interopRequireDefault(_AmplifyUITheme);

var _AmplifyUIComponentsReact = require('../Amplify-UI/Amplify-UI-Components-React');

var _Provider = require('./Provider');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var logger = new _core.ConsoleLogger('FederatedSignIn');

var FederatedButtons = exports.FederatedButtons = function (_Component) {
    (0, _inherits3.default)(FederatedButtons, _Component);

    function FederatedButtons() {
        (0, _classCallCheck3.default)(this, FederatedButtons);
        return (0, _possibleConstructorReturn3.default)(this, (FederatedButtons.__proto__ || Object.getPrototypeOf(FederatedButtons)).apply(this, arguments));
    }

    (0, _createClass3.default)(FederatedButtons, [{
        key: 'google',
        value: function google(google_client_id) {
            if (!google_client_id) {
                return null;
            }

            var _props = this.props,
                theme = _props.theme,
                onStateChange = _props.onStateChange;

            return _react2.default.createElement(_Provider.GoogleButton, {
                google_client_id: google_client_id,
                theme: theme,
                onStateChange: onStateChange
            });
        }
    }, {
        key: 'facebook',
        value: function facebook(facebook_app_id) {
            if (!facebook_app_id) {
                return null;
            }

            var _props2 = this.props,
                theme = _props2.theme,
                onStateChange = _props2.onStateChange;

            return _react2.default.createElement(_Provider.FacebookButton, {
                facebook_app_id: facebook_app_id,
                theme: theme,
                onStateChange: onStateChange
            });
        }
    }, {
        key: 'amazon',
        value: function amazon(amazon_client_id) {
            if (!amazon_client_id) {
                return null;
            }

            var _props3 = this.props,
                theme = _props3.theme,
                onStateChange = _props3.onStateChange;

            return _react2.default.createElement(_Provider.AmazonButton, {
                amazon_client_id: amazon_client_id,
                theme: theme,
                onStateChange: onStateChange
            });
        }
    }, {
        key: 'OAuth',
        value: function OAuth(oauth_config) {
            if (!oauth_config) {
                return null;
            }
            var _props4 = this.props,
                theme = _props4.theme,
                onStateChange = _props4.onStateChange;

            return _react2.default.createElement(_Provider.OAuthButton, {
                label: oauth_config ? oauth_config.label : undefined,
                theme: theme,
                onStateChange: onStateChange
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var authState = this.props.authState;

            if (!['signIn', 'signedOut', 'signedUp'].includes(authState)) {
                return null;
            }

            var federated = this.props.federated || {};
            if (!_auth2.default || typeof _auth2.default.configure !== 'function') {
                throw new Error('No Auth module found, please ensure @aws-amplify/auth is imported');
            }

            var config = _auth2.default.configure();
            if (config.oauth) {
                federated.oauth_config = Object.assign({}, federated.oauth_config, config.oauth);
            }

            if (_core.JS.isEmpty(federated)) {
                return null;
            }

            var google_client_id = federated.google_client_id,
                facebook_app_id = federated.facebook_app_id,
                amazon_client_id = federated.amazon_client_id,
                oauth_config = federated.oauth_config;


            var theme = this.props.theme || _AmplifyUITheme2.default;
            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'div',
                    null,
                    this.google(google_client_id)
                ),
                _react2.default.createElement(
                    'div',
                    null,
                    this.facebook(facebook_app_id)
                ),
                _react2.default.createElement(
                    'div',
                    null,
                    this.amazon(amazon_client_id)
                ),
                _react2.default.createElement(
                    'div',
                    null,
                    this.OAuth(oauth_config)
                ),
                _react2.default.createElement(
                    _AmplifyUIComponentsReact.Strike,
                    null,
                    'or'
                )
            );
        }
    }]);
    return FederatedButtons;
}(_react.Component);

var FederatedSignIn = function (_Component2) {
    (0, _inherits3.default)(FederatedSignIn, _Component2);

    function FederatedSignIn() {
        (0, _classCallCheck3.default)(this, FederatedSignIn);
        return (0, _possibleConstructorReturn3.default)(this, (FederatedSignIn.__proto__ || Object.getPrototypeOf(FederatedSignIn)).apply(this, arguments));
    }

    (0, _createClass3.default)(FederatedSignIn, [{
        key: 'render',
        value: function render() {
            var _props5 = this.props,
                authState = _props5.authState,
                onStateChange = _props5.onStateChange;

            var federated = this.props.federated || {};
            if (!_auth2.default || typeof _auth2.default.configure !== 'function') {
                throw new Error('No Auth module found, please ensure @aws-amplify/auth is imported');
            }

            var config = _auth2.default.configure();
            if (config.oauth) {
                federated.oauth_config = Object.assign({}, federated.oauth_config, config.oauth);
            }

            if (!federated) {
                logger.debug('federated prop is empty. show nothing');
                logger.debug('federated={google_client_id: , facebook_app_id: , amazon_client_id}');
                return null;
            }
            if (!['signIn', 'signedOut', 'signedUp'].includes(authState)) {
                return null;
            }
            logger.debug('federated Config is', federated);
            var theme = this.props.theme || _AmplifyUITheme2.default;
            return _react2.default.createElement(
                _AmplifyUIComponentsReact.FormSection,
                { theme: theme },
                _react2.default.createElement(
                    _AmplifyUIComponentsReact.SectionBody,
                    { theme: theme },
                    _react2.default.createElement(FederatedButtons, {
                        federated: federated,
                        theme: theme,
                        authState: authState,
                        onStateChange: onStateChange
                    })
                )
            );
        }
    }]);
    return FederatedSignIn;
}(_react.Component);

exports.default = FederatedSignIn;