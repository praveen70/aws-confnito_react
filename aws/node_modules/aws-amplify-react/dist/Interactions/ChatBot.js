"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ChatBot = undefined;

var _regenerator = require("babel-runtime/regenerator");

var _regenerator2 = _interopRequireDefault(_regenerator);

var _toConsumableArray2 = require("babel-runtime/helpers/toConsumableArray");

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _asyncToGenerator2 = require("babel-runtime/helpers/asyncToGenerator");

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require("babel-runtime/helpers/createClass");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require("babel-runtime/helpers/possibleConstructorReturn");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require("babel-runtime/helpers/inherits");

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _AmplifyUI = require("../AmplifyUI");

var _AmplifyTheme = require("../AmplifyTheme");

var _core = require("@aws-amplify/core");

var _interactions = require("@aws-amplify/interactions");

var _interactions2 = _interopRequireDefault(_interactions);

var _runtime = require("regenerator-runtime/runtime");

var _runtime2 = _interopRequireDefault(_runtime);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var styles = {
    itemMe: {
        padding: 10,
        fontSize: 12,
        color: 'gray',
        marginTop: 4,
        textAlign: 'right'
    },
    itemBot: {
        fontSize: 12,
        textAlign: 'left'
    },
    list: {
        height: '300px',
        overflow: 'auto'
    },
    textInput: Object.assign({}, _AmplifyTheme.Input, {
        display: 'inline-block',
        width: 'calc(100% - 90px - 15px)'
    }),
    button: Object.assign({}, _AmplifyTheme.Button, {
        width: '90px',
        float: 'right'
    })
};

var ChatBot = exports.ChatBot = function (_Component) {
    (0, _inherits3.default)(ChatBot, _Component);

    function ChatBot(props) {
        (0, _classCallCheck3.default)(this, ChatBot);

        var _this = (0, _possibleConstructorReturn3.default)(this, (ChatBot.__proto__ || Object.getPrototypeOf(ChatBot)).call(this, props));

        _this.state = {
            dialog: [{
                message: _this.props.welcomeMessage || 'Welcome to Lex',
                from: 'system'
            }],
            inputText: ''
        };
        _this.changeInputText = _this.changeInputText.bind(_this);
        _this.listItems = _this.listItems.bind(_this);
        _this.submit = _this.submit.bind(_this);

        _this.listItemsRef = _react2.default.createRef();
        return _this;
    }

    (0, _createClass3.default)(ChatBot, [{
        key: "listItems",
        value: function listItems() {
            return this.state.dialog.map(function (m, i) {
                if (m.from === 'me') {
                    return _react2.default.createElement(
                        "div",
                        { key: i, style: styles.itemMe },
                        m.message
                    );
                } else if (m.from === 'system') {
                    return _react2.default.createElement(
                        "div",
                        { key: i, style: styles.itemBot },
                        m.message
                    );
                } else {
                    return _react2.default.createElement(
                        "div",
                        { key: i, style: styles.itemBot },
                        m.message
                    );
                }
            });
        }
    }, {
        key: "submit",
        value: function () {
            var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(e) {
                var _this2 = this;

                var response;
                return _regenerator2.default.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                e.preventDefault();

                                if (this.state.inputText) {
                                    _context.next = 3;
                                    break;
                                }

                                return _context.abrupt("return");

                            case 3:
                                _context.next = 5;
                                return new Promise(function (resolve) {
                                    return _this2.setState({
                                        dialog: [].concat((0, _toConsumableArray3.default)(_this2.state.dialog), [{ message: _this2.state.inputText, from: 'me' }])
                                    }, resolve);
                                });

                            case 5:
                                if (!(!_interactions2.default || typeof _interactions2.default.send !== 'function')) {
                                    _context.next = 7;
                                    break;
                                }

                                throw new Error('No Interactions module found, please ensure @aws-amplify/interactions is imported');

                            case 7:
                                _context.next = 9;
                                return _interactions2.default.send(this.props.botName, this.state.inputText);

                            case 9:
                                response = _context.sent;
                                _context.next = 12;
                                return this.setState({
                                    dialog: [].concat((0, _toConsumableArray3.default)(this.state.dialog), [response && { from: 'bot', message: response.message }]),
                                    inputText: ''
                                });

                            case 12:
                                this.listItemsRef.current.scrollTop = this.listItemsRef.current.scrollHeight;

                            case 13:
                            case "end":
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function submit(_x) {
                return _ref.apply(this, arguments);
            }

            return submit;
        }()
    }, {
        key: "changeInputText",
        value: function () {
            var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(event) {
                return _regenerator2.default.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                _context2.next = 2;
                                return this.setState({ inputText: event.target.value });

                            case 2:
                            case "end":
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            function changeInputText(_x2) {
                return _ref2.apply(this, arguments);
            }

            return changeInputText;
        }()
    }, {
        key: "getOnComplete",
        value: function getOnComplete(fn) {
            var _this3 = this;

            return function () {
                var clearOnComplete = _this3.props.clearOnComplete;

                var message = fn.apply(undefined, arguments);

                _this3.setState({
                    dialog: [].concat((0, _toConsumableArray3.default)(!clearOnComplete && _this3.state.dialog), [message && { from: 'bot', message: message }]).filter(Boolean)
                }, function () {
                    _this3.listItemsRef.current.scrollTop = _this3.listItemsRef.current.scrollHeight;
                });
            };
        }
    }, {
        key: "componentDidMount",
        value: function componentDidMount() {
            var _props = this.props,
                onComplete = _props.onComplete,
                botName = _props.botName;


            if (onComplete && botName) {
                if (!_interactions2.default || typeof _interactions2.default.onComplete !== 'function') {
                    throw new Error('No Interactions module found, please ensure @aws-amplify/interactions is imported');
                }
                _interactions2.default.onComplete(botName, this.getOnComplete(onComplete, this));
            }
        }
    }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps) {
            var _props2 = this.props,
                onComplete = _props2.onComplete,
                botName = _props2.botName;


            if (botName && this.props.onComplete !== prevProps.onComplete) {
                if (!_interactions2.default || typeof _interactions2.default.onComplete !== 'function') {
                    throw new Error('No Interactions module found, please ensure @aws-amplify/interactions is imported');
                }
                _interactions2.default.onComplete(botName, this.getOnComplete(onComplete, this));
            }
        }
    }, {
        key: "render",
        value: function render() {
            var _props3 = this.props,
                title = _props3.title,
                theme = _props3.theme,
                onComplete = _props3.onComplete;


            return _react2.default.createElement(
                _AmplifyUI.FormSection,
                { theme: theme },
                title && _react2.default.createElement(
                    _AmplifyUI.SectionHeader,
                    { theme: theme },
                    _core.I18n.get(title)
                ),
                _react2.default.createElement(
                    _AmplifyUI.SectionBody,
                    { theme: theme },
                    _react2.default.createElement(
                        "div",
                        { ref: this.listItemsRef, style: styles.list },
                        this.listItems()
                    )
                ),
                _react2.default.createElement(
                    _AmplifyUI.SectionFooter,
                    { theme: theme },
                    _react2.default.createElement(
                        "form",
                        { onSubmit: this.submit },
                        _react2.default.createElement("input", {
                            style: styles.textInput,
                            type: "text",
                            placeholder: _core.I18n.get("Type your message here"),
                            onChange: this.changeInputText,
                            value: this.state.inputText }),
                        _react2.default.createElement(
                            "button",
                            { type: "submit", style: styles.button },
                            _core.I18n.get('Send')
                        )
                    )
                )
            );
        }
    }]);
    return ChatBot;
}(_react.Component);

ChatBot.defaultProps = {
    title: '',
    botName: '',
    onComplete: undefined,
    clearOnComplete: false
};

exports.default = ChatBot;