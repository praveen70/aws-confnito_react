'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _core = require('@aws-amplify/core');

var _auth = require('@aws-amplify/auth');

var _auth2 = _interopRequireDefault(_auth);

var _AmplifyUITheme = require('../Amplify-UI/Amplify-UI-Theme');

var _AmplifyUITheme2 = _interopRequireDefault(_AmplifyUITheme);

var _AmplifyUIComponentsReact = require('../Amplify-UI/Amplify-UI-Components-React');

var _TOTPSetupComp = require('./TOTPSetupComp');

var _TOTPSetupComp2 = _interopRequireDefault(_TOTPSetupComp);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */

var logger = new _core.ConsoleLogger('SelectMFAType');

var SelectMFAType = function (_Component) {
    (0, _inherits3.default)(SelectMFAType, _Component);

    function SelectMFAType(props) {
        (0, _classCallCheck3.default)(this, SelectMFAType);

        var _this = (0, _possibleConstructorReturn3.default)(this, (SelectMFAType.__proto__ || Object.getPrototypeOf(SelectMFAType)).call(this, props));

        _this.verify = _this.verify.bind(_this);
        _this.handleInputChange = _this.handleInputChange.bind(_this);

        _this.state = {
            TOTPSetup: false,
            selectMessage: null
        };
        return _this;
    }

    (0, _createClass3.default)(SelectMFAType, [{
        key: 'handleInputChange',
        value: function handleInputChange(evt) {
            // clear current state
            this.setState({
                TOTPSetup: false,
                selectMessage: null
            });
            this.inputs = {};
            var _evt$target = evt.target,
                name = _evt$target.name,
                value = _evt$target.value,
                type = _evt$target.type,
                checked = _evt$target.checked;

            var check_type = ['radio', 'checkbox'].includes(type);
            this.inputs[value] = check_type ? checked : value;
        }
    }, {
        key: 'verify',
        value: function verify() {
            var _this2 = this;

            logger.debug('mfatypes inputs', this.inputs);
            if (!this.inputs) {
                logger.debug('No mfa type selected');
                return;
            }
            var _inputs = this.inputs,
                TOTP = _inputs.TOTP,
                SMS = _inputs.SMS,
                NOMFA = _inputs.NOMFA;

            var mfaMethod = null;
            if (TOTP) {
                mfaMethod = 'TOTP';
            } else if (SMS) {
                mfaMethod = 'SMS';
            } else if (NOMFA) {
                mfaMethod = 'NOMFA';
            }

            var user = this.props.authData;

            if (!_auth2.default || typeof _auth2.default.setPreferredMFA !== 'function') {
                throw new Error('No Auth module found, please ensure @aws-amplify/auth is imported');
            }

            _auth2.default.setPreferredMFA(user, mfaMethod).then(function (data) {
                logger.debug('set preferred mfa success', data);
                _this2.setState({
                    selectMessage: 'Success! Your MFA Type is now: ' + mfaMethod,
                    showToast: true
                });
            }).catch(function (err) {
                var message = err.message;

                if (message === 'User has not set up software token mfa' || message === 'User has not verified software token mfa') {
                    _this2.setState({
                        TOTPSetup: true,
                        selectMessage: 'You need to setup TOTP',
                        showToast: true
                    });
                } else {
                    logger.debug('set preferred mfa failed', err);
                    _this2.setState({
                        selectMessage: 'Failed! You cannot select MFA Type for now!',
                        showToast: true
                    });
                }
            });
        }
    }, {
        key: 'selectView',
        value: function selectView(theme) {
            var _this3 = this;

            var MFATypes = this.props.MFATypes;

            if (!MFATypes || Object.keys(MFATypes).length < 2) {
                logger.debug('less than 2 mfa types available');
                return _react2.default.createElement(
                    'div',
                    null,
                    _react2.default.createElement(
                        'a',
                        null,
                        'less than 2 mfa types available'
                    )
                );
            }
            var SMS = MFATypes.SMS,
                TOTP = MFATypes.TOTP,
                Optional = MFATypes.Optional;

            return _react2.default.createElement(
                _AmplifyUIComponentsReact.FormSection,
                { theme: theme },
                this.state.showToast && this.state.selectMessage && _react2.default.createElement(
                    _AmplifyUIComponentsReact.Toast,
                    { onClose: function onClose() {
                            return _this3.setState({ showToast: false });
                        } },
                    _core.I18n.get(this.state.selectMessage)
                ),
                _react2.default.createElement(
                    _AmplifyUIComponentsReact.SectionHeader,
                    { theme: theme },
                    _core.I18n.get('Select MFA Type')
                ),
                _react2.default.createElement(
                    _AmplifyUIComponentsReact.SectionBody,
                    { theme: theme },
                    _react2.default.createElement(
                        'div',
                        null,
                        SMS ? _react2.default.createElement(_AmplifyUIComponentsReact.RadioRow, {
                            placeholder: _core.I18n.get('SMS'),
                            theme: theme,
                            key: 'sms',
                            name: 'MFAType',
                            value: 'SMS',
                            onChange: this.handleInputChange
                        }) : null,
                        TOTP ? _react2.default.createElement(_AmplifyUIComponentsReact.RadioRow, {
                            placeholder: _core.I18n.get('TOTP'),
                            theme: theme,
                            key: 'totp',
                            name: 'MFAType',
                            value: 'TOTP',
                            onChange: this.handleInputChange
                        }) : null,
                        Optional ? _react2.default.createElement(_AmplifyUIComponentsReact.RadioRow, {
                            placeholder: _core.I18n.get('No MFA'),
                            theme: theme,
                            key: 'noMFA',
                            name: 'MFAType',
                            value: 'NOMFA',
                            onChange: this.handleInputChange
                        }) : null
                    )
                ),
                _react2.default.createElement(
                    _AmplifyUIComponentsReact.SectionFooter,
                    null,
                    _react2.default.createElement(
                        _AmplifyUIComponentsReact.Button,
                        { theme: theme, onClick: this.verify },
                        _core.I18n.get('Verify')
                    )
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var theme = this.props.theme ? theme : _AmplifyUITheme2.default;
            return _react2.default.createElement(
                'div',
                null,
                this.selectView(theme),
                this.state.TOTPSetup ? _react2.default.createElement(_TOTPSetupComp2.default, this.props) : null
            );
        }
    }]);
    return SelectMFAType;
}(_react.Component);

exports.default = SelectMFAType;